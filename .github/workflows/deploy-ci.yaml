name: "Deploy: CI"
on:
  push:
    branches: [ 'main', 'develop' ]

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x, 'lts/*' ]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm install --ignore-scripts
      - name: Run Lint Fix
        run: npm run lint:fix
      - name: Run Unit Tests
        run: npm run test
  Release:
    runs-on: ubuntu-latest
    needs: [ 'Test' ]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: NPM Install
        run: npm install --ignore-scripts
      - name: Semantic Release (Dry Run)
        run: npm run semantic-release:dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Semantic Release
        run: npm run semantic-release
        env:
          GITHUB_TOKEN:  ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  Docs:
    runs-on: ubuntu-latest
    needs: [ 'Release' ]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
      - name: NPM Install
        run: npm install --ignore-scripts
      - name: Generate Typedoc documentation
        run: npm run typedoc
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./docs
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
  Merge:
    runs-on: ubuntu-latest
    needs: [ 'Test', 'Release' ]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: develop
      - name: Configure Git
        run: |
          git config --global user.email "bugs5382@users.noreply.github.com"
          git config --global user.name "Bugs5382"
      - name: Merge main into develop
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
          git fetch origin
          git checkout develop
          git merge origin/main -m "chore: merge main into develop [ci skip]"
          git push origin develop